#version 310 es

precision mediump float;
precision mediump sampler;

layout(set=0, binding=0) uniform _0 { vec4 u_scaling; };

layout(set=0, binding=1) uniform texture2D t_input;
layout(set=0, binding=2) uniform sampler s_input;

layout(location=0) out vec4 f_color;

// Generated by https://github.com/tuzz/gaussian_blur_generator

void main() {
  vec2 coords = gl_FragCoord.xy * u_scaling.xy;

  float one_pixel = u_scaling.y;
  float offset1 = one_pixel * 1.497142857142857;
  float offset2 = one_pixel * 3.493333333333333;
  float offset3 = one_pixel * 5.48952380952381;
  float offset4 = one_pixel * 7.485714285714286;
  float offset5 = one_pixel * 9.481904761904762;
  float offset6 = one_pixel * 11.478095238095237;
  float offset7 = one_pixel * 13.474285714285715;
  float offset8 = one_pixel * 15.470476190476191;
  float offset9 = one_pixel * 17.466666666666665;
  float offset10 = one_pixel * 19.462857142857143;
  float offset11 = one_pixel * 21.45904761904762;
  float offset12 = one_pixel * 23.455238095238094;
  float offset13 = one_pixel * 25.451428571428572;
  float offset14 = one_pixel * 27.447619047619046;

  f_color = (
    0.0039550002120646785 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset14)) +
    0.005926277761802558 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset13)) +
    0.008611554000906302 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset12)) +
    0.01213568061227304 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset11)) +
    0.016586214368765242 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset10)) +
    0.021986028755598783 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset9)) +
    0.02826682081543361 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset8)) +
    0.03524930048764867 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset7)) +
    0.04263620568944277 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset6)) +
    0.05002311089123687 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset5)) +
    0.05692918866782233 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset4)) +
    0.06284604470063132 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset3)) +
    0.06729836842055573 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset2)) +
    0.06990660167941311 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset1)) +
    0.035287205872809965 * texture(sampler2D(t_input, s_input), coords) +
    0.06990660167941311 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset1)) +
    0.06729836842055573 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset2)) +
    0.06284604470063132 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset3)) +
    0.05692918866782233 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset4)) +
    0.05002311089123687 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset5)) +
    0.04263620568944277 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset6)) +
    0.03524930048764867 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset7)) +
    0.02826682081543361 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset8)) +
    0.021986028755598783 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset9)) +
    0.016586214368765242 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset10)) +
    0.01213568061227304 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset11)) +
    0.008611554000906302 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset12)) +
    0.005926277761802558 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset13)) +
    0.0039550002120646785 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset14))
  );
}
