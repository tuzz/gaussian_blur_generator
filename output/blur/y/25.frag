#version 310 es

precision mediump float;
precision mediump sampler;

layout(set=0, binding=0) uniform _0 { vec4 u_scaling; };

layout(set=0, binding=1) uniform texture2D t_input;
layout(set=0, binding=2) uniform sampler s_input;

layout(location=0) out vec4 f_color;

// Generated by https://github.com/tuzz/gaussian_blur_generator

void main() {
  vec2 coords = gl_FragCoord.xy * u_scaling.xy;

  float one_pixel = u_scaling.y;
  float offset1 = one_pixel * 1.496124031007752;
  float offset2 = one_pixel * 3.490956072351421;
  float offset3 = one_pixel * 5.48578811369509;
  float offset4 = one_pixel * 7.48062015503876;
  float offset5 = one_pixel * 9.47545219638243;
  float offset6 = one_pixel * 11.470284237726098;
  float offset7 = one_pixel * 13.465116279069768;
  float offset8 = one_pixel * 15.459948320413437;
  float offset9 = one_pixel * 17.454780361757106;
  float offset10 = one_pixel * 19.449612403100776;
  float offset11 = one_pixel * 21.444444444444443;
  float offset12 = one_pixel * 23.439276485788113;

  f_color = (
    0.004731374638526828 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset12)) +
    0.007540085409255728 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset11)) +
    0.011524793358576042 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset10)) +
    0.01689654444480064 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset9)) +
    0.023763279513397968 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset8)) +
    0.03206198904427177 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset7)) +
    0.0415028637249055 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset6)) +
    0.05154578762697636 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset5)) +
    0.06142652041359467 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset4)) +
    0.0702396780244199 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset3)) +
    0.07707000260423817 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset2)) +
    0.08114711334410024 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y - offset1)) +
    0.04109993570587236 * texture(sampler2D(t_input, s_input), coords) +
    0.08114711334410024 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset1)) +
    0.07707000260423817 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset2)) +
    0.0702396780244199 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset3)) +
    0.06142652041359467 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset4)) +
    0.05154578762697636 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset5)) +
    0.0415028637249055 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset6)) +
    0.03206198904427177 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset7)) +
    0.023763279513397968 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset8)) +
    0.01689654444480064 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset9)) +
    0.011524793358576042 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset10)) +
    0.007540085409255728 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset11)) +
    0.004731374638526828 * texture(sampler2D(t_input, s_input), vec2(coords.x, coords.y + offset12))
  );
}
